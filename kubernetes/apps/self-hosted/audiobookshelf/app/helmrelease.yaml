---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app audiobookshelf
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.30.0@sha256:6fbd7dc95d53c6e168ce69e760b87c334e3b9ba88bf7b8531ed5a116d5d6da03
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: &port 80
                  failureThreshold: 6
                  periodSeconds: 10
              readiness: *probes
              startup: *probes
            resources:
              limits:
                memory: 2Gi
    service:
      main:
        controller: *app
        ports:
          http:
            port: *port
    route:
      *app :
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
        annotations:
          gethomepage.dev/enabled: 'true'
          gethomepage.dev/group: Media
          gethomepage.dev/name: Audiobookshelf
          gethomepage.dev/icon: audiobookshelf.svg
          gethomepage.dev/app: *app
          gethomepage.dev/widget.type: audiobookshelf
          gethomepage.dev/widget.url: http://audiobookshelf.self-hosted.svc.cluster.local
          gethomepage.dev/widget.key: '{{`{{HOMEPAGE_VAR_AUDIOBOOKSHELF_TOKEN}}`}}'

    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          *app :
            main:
              - path: /config
                subPath: config
              - path: /metadata
                subPath: metadata
      data:
        type: nfs
        server: ${NAS_IP}
        path: ${NAS_PATH}/data
        globalMounts:
          - path: /data
