---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app homebox
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      homebox:
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: *app
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom:
              - secretRef:
                  name: *app
              - secretRef:
                  name: homebox-initdb
        containers:
          app:
            image:
              repository: ghcr.io/sysadminsmedia/homebox
              tag: 0.20.1@sha256:cd5ab1669c37625b55be7758bd54dc2d2d6146db61c510322d0378312783a9b7
            env:
              TZ: "${TIMEZONE}"
              HBOX_LOG_LEVEL: info
              HBOX_LOG_FORMAT: text
              HBOX_WEB_HOST: 0.0.0.0
              HBOX_WEB_PORT: &port 7745
              HBOX_MEB_MAX_UPLOAD_SIZE: 25
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ALL] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        annotations:
          gethomepage.dev/enabled: 'true'
          gethomepage.dev/group: Home
          gethomepage.dev/name: Homebox
          gethomepage.dev/icon: homebox.png
          gethomepage.dev/widget.type: homebox
          gethomepage.dev/widget.url: https://{{ .Release.Name }}.${SECRET_DOMAIN}
          gethomepage.dev/widget.username: "{{`{{HOMEPAGE_VAR_HOMEBOX_USER}}`}}"
          gethomepage.dev/widget.password: "{{`{{HOMEPAGE_VAR_HOMEBOX_PASS}}`}}"

    persistence:
      data:
        existingClaim: *app
