---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.10.7@sha256:e4d1dc5374344446a3a78e43dd211247f22afba84ea2e5a13cbe1a94e1ff2141
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: &port 8096
                  failureThreshold: 6
                  periodSeconds: 10
              readiness: *probes
              startup: *probes
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        annotations:
          gethomepage.dev/enabled: 'true'
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Jellyfin
          gethomepage.dev/icon: jellyfin.svg
          gethomepage.dev/app: jellyfin
          gethomepage.dev/widget.type: jellyfin
          gethomepage.dev/widget.url: http://jellyfin.self-hosted.svc.cluster.local
          gethomepage.dev/widget.key: '{{`{{HOMEPAGE_VAR_JELLYFIN_TOKEN}}`}}'
    persistence:
      cache:
        existingClaim: jellyfin-cache
        globalMounts:
          - path: /cache
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      media:
        type: nfs
        server: ${NAS_IP}
        path: ${NAS_PATH}/data
        globalMounts:
          - path: /data
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /transcode
